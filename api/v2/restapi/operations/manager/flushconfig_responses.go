// Code generated by go-swagger; DO NOT EDIT.

// Copyright Prometheus Team
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/prometheus/alertmanager/api/v2/models"
)

// FlushconfigOKCode is the HTTP code returned for type FlushconfigOK
const FlushconfigOKCode int = 200

/*FlushconfigOK Create config response

swagger:response flushconfigOK
*/
type FlushconfigOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseModel `json:"body,omitempty"`
}

// NewFlushconfigOK creates FlushconfigOK with default headers values
func NewFlushconfigOK() *FlushconfigOK {

	return &FlushconfigOK{}
}

// WithPayload adds the payload to the flushconfig o k response
func (o *FlushconfigOK) WithPayload(payload *models.ResponseModel) *FlushconfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the flushconfig o k response
func (o *FlushconfigOK) SetPayload(payload *models.ResponseModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FlushconfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
